/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.60
 * Generated at: 2020-12-07 04:05:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class userJoin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/JSP폴더/test1/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Lab_Scale/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1607310605640L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("     \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>🐶MISSING PET|게시판|회원가입</title>\r\n");
      out.write("\r\n");
      out.write("<meta charset=\"utf-8\" />\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=no\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/assets/css/main.css\" />\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!-- Wrapper -->\r\n");
      out.write("<div id=\"wrapper\"> \r\n");
      out.write("  \r\n");
      out.write("  <!-- Header -->\r\n");
      out.write("  <header id=\"header\"> <a href=\"index\" class=\"logo\"><strong>Missing</strong> pet</a>\r\n");
      out.write("    <nav> <a href=\"#menu\">메뉴</a> </nav>\r\n");
      out.write("  </header>\r\n");
      out.write("\r\n");
      out.write("  <!-- Menu -->\r\n");
      out.write("  <nav id=\"menu\">\r\n");
      out.write("    <ul class=\"links\">\r\n");
      out.write("      <li><a href=\"index\">홈</a></li>\r\n");
      out.write("      <li><a href=\"landing\">MISSING PET이란?</a></li>\r\n");
      out.write("      <li><a href=\"/Lab-scale/board.do\">게시판</a></li>\r\n");
      out.write("      ");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("    </ul>\r\n");
      out.write("    <ul class=\"actions vertical\">\r\n");
      out.write("      <li><a href=\"javascript:history.back();\" class=\"button special fit\">돌아가기</a></li>\r\n");
      out.write("   ");
      if (_jspx_meth_c_005fchoose_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("    </ul>\r\n");
      out.write("  </nav>\r\n");
      out.write("  \r\n");
      out.write("  <!-- Main -->\r\n");
      out.write("  <main id=\"main\" class=\"col-md-9 float-left col pl-md-5 pt-3 main\">\r\n");
      out.write("    <div align=\"center\">\r\n");
      out.write("      <div class=\"page-header mt-3\">\r\n");
      out.write("        <h2>회원가입</h2>\r\n");
      out.write("      </div>\r\n");
      out.write("      <p class=\"lead\">사용자 정보를 입력해 회원가입을 수행합니다.</p>\r\n");
      out.write("      <hr>\r\n");
      out.write("      <form name=\"form\" action=\"\" method=\"POST\"  class=\"pt-3 md-3\" style=\"max-width: 720px\" onSubmit=\"return checkAll()\">\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("          <label style=\"text-align: start\">아이디</label>\r\n");
      out.write("           <input type=\"text\" name=\"userId\" class=\"form-control\" style=\"display: inline; width: 550px; height: 70px;\" placeholder=\"아이디(4~12자의 영문 대소문자와 숫자)\">\r\n");
      out.write("         <button type=\"submit\" formaction=\" \" class=\"btn btn-primary\" name=\"join\" value=\"회원가입\">중복검사</button>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("          <label style=\"text-align: start\">비밀번호</label>\r\n");
      out.write("          <input type=\"password\" name=\"pw\" class=\"form-control\" placeholder=\"비밀번호(4~12자의 영문 대소문자와 숫자)\">\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("          <label style=\"text-align: start\">비밀번호 확인</label>\r\n");
      out.write("          <input type=\"password\" name=\"password2\" class=\"form-control\" placeholder=\"비밀번호 확인\">\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("           <label style=\"text-align: start\">주소</label>\r\n");
      out.write("              <input type=\"text\" name=\"add1\" id=\"address\" class=\"form-control\" style=\"display: inline; width: 550px; height: 70px; margin-bottom: 10px\" placeholder=\"주소를 입력하세요.\" readonly/>\r\n");
      out.write("            <input type=\"button\" class=\"btn btn-primary\" onClick=\"openDaumZipAddress();\" value = \"주소 찾기\" />\r\n");
      out.write("            <input type=\"text\" name=\"add2\" id=\"address_etc\" class=\"form-control\"  placeholder=\"상세주소를 입력하세요.\"/>\r\n");
      out.write("            \r\n");
      out.write("            <!-- \r\n");
      out.write("\t\t\t<div>\r\n");
      out.write("\t\t\t<input type=\"text\" id=\"address\" value=\"\" style=\"width:500px;\" readonly/>\r\n");
      out.write("\t\t\t<input type=\"button\" onClick=\"openDaumZipAddress();\" value = \"주소 찾기\" />\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<br/>\r\n");
      out.write("\t\t\t<input type=\"text\" id=\"address_etc\" value=\"\" style=\"width:720px;\"/>\r\n");
      out.write("\t\t\t\r\n");
      out.write("         <input type=\"text\" class=\"form-control\" placeholder=\"주소를 입력하세요.\">-->  \r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("          <label style=\"text-align: start\">이메일</label>\r\n");
      out.write("          <input type=\"text\" name=\"email\" class=\"form-control\" placeholder=\"이메일 주소(예:id@domain.com)\">\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("          <label style=\"text-align: start\">이름</label>\r\n");
      out.write("          <input type=\"text\" name=\"username\" class=\"form-control\">\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class =\"form-row\">\r\n");
      out.write("          <div class=\"form-group col-md-6\">\r\n");
      out.write("            <label for =\"inputju\" style=\"text-align: start\">주민번호앞자리</label>\r\n");
      out.write("            <input type=\"text\" name=\"jumin1\" class=\"form-control\" placeholder=\"주민번호 앞자리(EX:990919)\">\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"form-group col-md-6\">\r\n");
      out.write("            <label for =\"inputmin\" style=\"text-align: start\">주민번호뒷자리</label>\r\n");
      out.write("            <input type=\"password\" name=\"jumin2\" class=\"form-control\" placeholder=\"주민번호 뒷자리(EX:114044)\">\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <button type=\"submit\" formaction=\"/Lab-scale/userjoin.do\"  class=\"btn btn-primary\"  name=\"join\" value=\"회원가입\">회원가입</button>\r\n");
      out.write("        <button type=\"reset\" class=\"btn btn-primary\" name=\"reset\" value=\"다시 입력\">다시입력</button>\r\n");
      out.write("      </form>\r\n");
      out.write("      <footer class=\"text-center\" style=\"max-width: 720px;\"> </footer>\r\n");
      out.write("    </div>\r\n");
      out.write("  </main>\r\n");
      out.write("  \r\n");
      out.write("  <!-- Footer -->\r\n");
      out.write("  <footer id=\"footer\">\r\n");
      out.write("    <div class=\"inner\">\r\n");
      out.write("      <ul class=\"icons\">\r\n");
      out.write("        <li><a href=\"https://twitter.com/explore\" class=\"icon alt fa-twitter\"><span class=\"label\">Twitter</span></a></li>\r\n");
      out.write("        <li><a href=\"https://www.facebook.com/\" class=\"icon alt fa-facebook\"><span class=\"label\">Facebook</span></a></li>\r\n");
      out.write("        <li><a href=\"https://www.instagram.com/\" class=\"icon alt fa-instagram\"><span class=\"label\">Instagram</span></a></li>\r\n");
      out.write("        <li><a href=\"https://github.com/\" class=\"icon alt fa-github\"><span class=\"label\">GitHub</span></a></li>\r\n");
      out.write("        <li><a href=\"https://www.linkedin.com/\" class=\"icon alt fa-linkedin\"><span class=\"label\">LinkedIn</span></a></li>\r\n");
      out.write("      </ul>\r\n");
      out.write("      <ul class=\"copyright\">\r\n");
      out.write("        <li>&copy; Untitled</li>\r\n");
      out.write("        <li>Design: <a href=\"https://html5up.net\">HTML5 UP</a></li>\r\n");
      out.write("      </ul>\r\n");
      out.write("    </div>\r\n");
      out.write("  </footer>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- Scripts --> \r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/assets/js/jquery.min.js\"></script> \r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/assets/js/jquery.scrolly.min.js\"></script> \r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/assets/js/jquery.scrollex.min.js\"></script> \r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/assets/js/skel.min.js\"></script> \r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/assets/js/util.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/assets/js/main.js\"></script> \r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/assets/js/kinds.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("<script type =\"text/javascript\">\r\n");
      out.write("function checkAll() {\r\n");
      out.write("        if (!checkUserId(form.userId.value)) {\r\n");
      out.write("            return false;\r\n");
      out.write("        } else if (!checkPassword(form.userId.value, form.password1.value,\r\n");
      out.write("                form.password2.value)) {\r\n");
      out.write("            return false;\r\n");
      out.write("        } else if (!checkMail(form.mail.value)) {\r\n");
      out.write("            return false;\r\n");
      out.write("        } else if (!checkName(form.name.value)) {\r\n");
      out.write("            return false;\r\n");
      out.write("        } else if (!checkBirth(form.identi1.value, form.identi2.value)) {\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("        return true;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// 공백확인 함수\r\n");
      out.write("function checkExistData(value, dataName) {\r\n");
      out.write("        if (value == \"\") {\r\n");
      out.write("            alert(dataName + \" 입력해주세요!\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("        return true;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// id 검사 함수\r\n");
      out.write("  function checkUserId(id) {\r\n");
      out.write("        //Id가 입력되었는지 확인하기\r\n");
      out.write("        if (!checkExistData(id, \"아이디를\"))\r\n");
      out.write("            return false;\r\n");
      out.write(" \r\n");
      out.write("        var idRegExp = /^[a-zA-z0-9]{4,12}$/; //아이디 유효성 검사\r\n");
      out.write("        if (!idRegExp.test(id)) {\r\n");
      out.write("            alert(\"아이디는 영문 대소문자와 숫자 4~12자리로 입력해야합니다!\");\r\n");
      out.write("            form.userId.value = \"\";\r\n");
      out.write("            form.userId.focus();\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("        return true; //확인이 완료되었을 때\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("// 비밀번호 검사 함수\r\n");
      out.write("function checkPassword(id, password1, password2) {\r\n");
      out.write("        //비밀번호가 입력되었는지 확인하기\r\n");
      out.write("        if (!checkExistData(password1, \"비밀번호를\"))\r\n");
      out.write("            return false;\r\n");
      out.write("        //비밀번호 확인이 입력되었는지 확인하기\r\n");
      out.write("        if (!checkExistData(password2, \"비밀번호 확인을\"))\r\n");
      out.write("            return false;\r\n");
      out.write(" \r\n");
      out.write("        var password1RegExp = /^[a-zA-z0-9]{4,12}$/; //비밀번호 유효성 검사\r\n");
      out.write("        if (!password1RegExp.test(password1)) {\r\n");
      out.write("            alert(\"비밀번호는 영문 대소문자와 숫자 4~12자리로 입력해야합니다!\");\r\n");
      out.write("            form.password1.value = \"\";\r\n");
      out.write("            form.password1.focus();\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("        //비밀번호와 비밀번호 확인이 맞지 않다면..\r\n");
      out.write("        if (password1 != password2) {\r\n");
      out.write("            alert(\"두 비밀번호가 맞지 않습니다.\");\r\n");
      out.write("            form.password1.value = \"\";\r\n");
      out.write("            form.password2.value = \"\";\r\n");
      out.write("            form.password2.focus();\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write(" \r\n");
      out.write("        //아이디와 비밀번호가 같을 때..\r\n");
      out.write("        if (id == password1) {\r\n");
      out.write("            alert(\"아이디와 비밀번호는 같을 수 없습니다!\");\r\n");
      out.write("            form.password1.value = \"\";\r\n");
      out.write("            form.password2.value = \"\";\r\n");
      out.write("            form.password2.focus();\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("        return true; //확인이 완료되었을 때\r\n");
      out.write(" }    \r\n");
      out.write("\r\n");
      out.write("// 이메일 검사 함수\r\n");
      out.write(" function checkMail(mail) {\r\n");
      out.write("        //mail이 입력되었는지 확인하기\r\n");
      out.write("        if (!checkExistData(mail, \"이메일을\"))\r\n");
      out.write("            return false;\r\n");
      out.write(" \r\n");
      out.write("        var emailRegExp = /^[A-Za-z0-9_]+[A-Za-z0-9]*[@]{1}[A-Za-z0-9]+[A-Za-z0-9]*[.]{1}[A-Za-z]{1,3}$/;\r\n");
      out.write("        if (!emailRegExp.test(mail)) {\r\n");
      out.write("            alert(\"이메일 형식이 올바르지 않습니다!\");\r\n");
      out.write("            form.mail.value = \"\";\r\n");
      out.write("            form.mail.focus();\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("        return true; //확인이 완료되었을 때\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// 이름 검사 함수\r\n");
      out.write("function checkName(name) {\r\n");
      out.write("        if (!checkExistData(name, \"이름을\"))\r\n");
      out.write("            return false;\r\n");
      out.write(" \r\n");
      out.write("        var nameRegExp = /^[가-힣]{2,4}$/;\r\n");
      out.write("        if (!nameRegExp.test(name)) {\r\n");
      out.write("            alert(\"이름이 올바르지 않습니다.\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("        return true; //확인이 완료되었을 때\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// 주민등록번호 검사 함수\r\n");
      out.write("function checkBirth(identi1, identi2) {\r\n");
      out.write("        //birth이 입력되었는지 확인하기\r\n");
      out.write("        if (!checkExistData(identi1, \"주민등록번호를 \")\r\n");
      out.write("                || !checkExistData(identi2, \"주민등록번호를 \"))\r\n");
      out.write("            return false;\r\n");
      out.write(" \r\n");
      out.write("        var totalIdenti = \"\" + identi1 + identi2;\r\n");
      out.write(" \r\n");
      out.write("        var identiArr = new Array();\r\n");
      out.write("        var sum = 0;\r\n");
      out.write("        var plus = 2;\r\n");
      out.write(" \r\n");
      out.write("        //배열에 주민등록번호 입력 후 유효값 확인하기 위해 sum에 저장\r\n");
      out.write("        for (var i = 0; i < 12; i++) {\r\n");
      out.write("            identiArr[i] = totalIdenti.charAt(i);\r\n");
      out.write("            if (i >= 0 && i <= 7) {\r\n");
      out.write("                sum += totalIdenti[i] * plus;\r\n");
      out.write("                plus++;\r\n");
      out.write("                if (i == 7)\r\n");
      out.write("                    plus = 2;\r\n");
      out.write("            } else {\r\n");
      out.write("                sum += totalIdenti[i] * plus;\r\n");
      out.write("                plus++;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        //주민등록번호 길이 확인하기\r\n");
      out.write("        if (identiArr.length < 12) {\r\n");
      out.write("            alert(\"주민등록번호는 13자리입니다.\");\r\n");
      out.write("            form.identi1.value = \"\";\r\n");
      out.write("            form.identi2.value = \"\";\r\n");
      out.write("            form.identi1.focus();\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("        //주민등록번호 유효한지 확인\r\n");
      out.write("        var result = 11 - (sum % 11)\r\n");
      out.write("        if (result != totalIdenti.charAt(12)) { //주민등록번호가 유효하지 않은 경우\r\n");
      out.write("            alert(\"유효하지않은 주민번호입니다.\");\r\n");
      out.write("            form.identi1.value = \"\";\r\n");
      out.write("            form.identi2.value = \"\";\r\n");
      out.write("            form.identi1.focus();\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("        return true; //확인이 완료되었을 때\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<!--다음 카카오주소 api -->\r\n");
      out.write("<script type=\"text/JavaScript\" src=\"http://code.jquery.com/jquery-1.7.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/JavaScript\" src=\"http://dmaps.daum.net/map_js_init/postcode.v2.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\tfunction openDaumZipAddress() {\r\n");
      out.write("\r\n");
      out.write("\t\tnew daum.Postcode({\r\n");
      out.write("\r\n");
      out.write("\t\t\toncomplete:function(data) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tjQuery(\"#postcode1\").val(data.postcode1);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tjQuery(\"#postcode2\").val(data.postcode2);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tjQuery(\"#zonecode\").val(data.zonecode);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tjQuery(\"#address\").val(data.address);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tjQuery(\"#address_etc\").focus();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tconsole.log(data);\r\n");
      out.write("\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t}).open();\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("      ");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("      ");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("      ");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /userJoin.jsp(31,6) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.active eq 0}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("      <li><a href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/admin.do\">관리자페이지</a></li>\r\n");
          out.write("      ");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("<li><a href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/mypage.do\">마이페이지</a></li>");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f1 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f1_reused = false;
    try {
      _jspx_th_c_005fchoose_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f1.setParent(null);
      int _jspx_eval_c_005fchoose_005f1 = _jspx_th_c_005fchoose_005f1.doStartTag();
      if (_jspx_eval_c_005fchoose_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("    ");
          if (_jspx_meth_c_005fwhen_005f1(_jspx_th_c_005fchoose_005f1, _jspx_page_context))
            return true;
          out.write("           \r\n");
          out.write("    ");
          if (_jspx_meth_c_005fotherwise_005f1(_jspx_th_c_005fchoose_005f1, _jspx_page_context))
            return true;
          out.write('\r');
          out.write('\n');
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f1);
      _jspx_th_c_005fchoose_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f1 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f1_reused = false;
    try {
      _jspx_th_c_005fwhen_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
      // /userJoin.jsp(40,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty sessionScope.sessionID}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f1 = _jspx_th_c_005fwhen_005f1.doStartTag();
      if (_jspx_eval_c_005fwhen_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("   \r\n");
          out.write("        ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.sessionID}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("님\r\n");
          out.write("        <li><a href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/logout.do\"> 로그아웃 </a></li>\r\n");
          out.write("    ");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f1);
      _jspx_th_c_005fwhen_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f1 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f1_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
      int _jspx_eval_c_005fotherwise_005f1 = _jspx_th_c_005fotherwise_005f1.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("<li><a href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/lab_controller/login\" class=\"button fit\">로그인/회원가입</a></li>");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f1);
      _jspx_th_c_005fotherwise_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f1_reused);
    }
    return false;
  }
}
